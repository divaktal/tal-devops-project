name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  ci-pipeline:
    name: Lint, Build Artifact & Docker Image
    runs-on: ubuntu-latest
    
    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # LINTING
      - name: HTML structure validation
        run: |
          echo "🔍 Checking HTML structure..."
          if [ -f index.html ]; then
            if grep -q "<!DOCTYPE html>" index.html; then
              echo "✅ Valid DOCTYPE found"
            else
              echo "❌ No DOCTYPE found"
              exit 1
            fi
            
            if grep -q "<html" index.html && grep -q "<head" index.html && grep -q "<body" index.html; then
              echo "✅ Basic HTML structure is valid"
            else
              echo "❌ Missing required HTML tags"
              exit 1
            fi
          else
            echo "❌ index.html not found"
            exit 1
          fi

      - name: CSS syntax check
        run: |
          if [ -f styles.css ]; then
            echo "🎨 Checking CSS syntax..."
            if npx csslint styles.css 2>/dev/null || true; then
              echo "✅ CSS check completed"
            fi
          fi

      - name: JavaScript syntax check
        run: |
          if [ -f script.js ]; then
            echo "⚡ Checking JavaScript syntax..."
            if node -c script.js; then
              echo "✅ JavaScript syntax is valid"
            else
              echo "❌ JavaScript syntax error"
              exit 1
            fi
          fi

      # BUILD ARTIFACT
      - name: Create build artifact
        run: |
          echo "📦 Creating build artifact..."
          mkdir -p dist
          cp index.html dist/
          cp styles.css dist/ 2>/dev/null || echo "⚠ styles.css not found"
          cp script.js dist/ 2>/dev/null || echo "⚠ script.js not found"
          
          if [ -d "photos" ]; then
            echo "📸 Copying photos directory..."
            cp -r photos dist/
          else
            echo "📸 Creating placeholder photos directory..."
            mkdir -p dist/photos
            echo "placeholder" > dist/photos/placeholder.txt
          fi
          
          echo "📁 Artifact contents:"
          ls -la dist/

      - name: Test artifact
        run: |
          echo "🧪 Testing artifact..."
          cd dist
          if [ -f index.html ]; then
            echo "✅ index.html exists in artifact"
          else
            echo "❌ index.html missing from artifact"
            exit 1
          fi

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-app-build
          path: dist/
          retention-days: 30

      # DOCKER IMAGE
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: ${{ github.event_name == 'push' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Verify Docker image
        run: |
          echo "🐳 Testing Docker image..."
          docker build -t local-test .
          echo "✅ Docker image builds successfully"

      # FINAL SUMMARY
      - name: CI Summary
        run: |
          echo "🎉 CI PIPELINE COMPLETE!"
          echo "📦 Artifact: web-app-build"
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "🐳 Docker Image: ghcr.io/${{ github.repository }}:${{ github.sha }}"
          else
            echo "🐳 Docker Image: Built locally (not pushed for PR)"
          fi
